server.port=0

spring.application.name=notifications-service
spring.config.import=optional:file:./news/.env[.properties]

eureka.instance.instance-id=${spring.application.name}:${random.uuid}
eureka.client.service-url.defaultZone=${EUREKA_URL}


spring.kafka.consumer.bootstrap-servers=${BOOTSTRAP_SERVERS}
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.group-id=${GROUP_ID}
spring.kafka.consumer.key-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages = '*'
spring.kafka.consumer.properties.spring.json.use.type.headers = false
spring.kafka.consumer.properties.spring.json.value.default.type = com.specificgroup.notification.dto.NotifyEvent
spring.kafka.consumer.properties.spring.deserializer.key.delegate.class = org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class = org.springframework.kafka.support.serializer.JsonDeserializer

spring.kafka.topics.notifications.registry = registration
spring.kafka.topics.notifications.password_change = password_change
spring.kafka.topics.notifications.logs = logs
spring.kafka.topics.notifications.email_change = email_change

spring.mail.default-encoding=UTF-8
spring.mail.properties.mail.mime.charset=UTF
spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=specificgroupmicroservicestask@gmail.com
spring.mail.password=uzamghgxgjmaudcs
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true