server:
  port: 0

spring:
  application:
    name: logs-service

  config:
    import: optional:file:./logs/.env[.properties]

  kafka:
    bootstrap-servers: ${BOOTSTRAP_SERVERS}
    consumer:
      auto-offset-reset: earliest
      group-id: ${GROUP_ID}
      key-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring.json.trusted.packages: '*'
        spring.json.use.type.headers: false
        spring.json.value.default.type: com.specificgroup.logs.kafka.dto.LogEvent
        spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
    topics:
        logging: logs

eureka:
  instance:
    instance-id: ${spring.application.name}:${random.uuid}
  client:
    service-url:
      defaultZone: ${EUREKA_URL}