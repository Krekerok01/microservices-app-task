server:
  port: 0

spring:
  application:
    name: blog-service

  config:
    import: optional:file:./blog/.env[.properties]

  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    open-in-view: false
    hibernate:
      ddl-auto: validate
  kafka:
    bootstrap-servers: ${BOOTSTRAP_SERVERS}
    consumer:
      auto-offset-reset: earliest
      group-id: ${GROUP_ID}
      key-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring.json.trusted.packages: '*'
        spring.json.use.type.headers: false
        spring.json.value.default.type: com.specificgroup.blog.dto.kafka.UserServiceMessage
        spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
    topics:
      user:
        service:
          request: blog-user
          response:
            successful: successful-response
      logging:
        info: info



  liquibase:
    enabled: true
    change-log: classpath:/db/changelog/db.changelog-master.yml

eureka:
  instance:
    instance-id: ${spring.application.name}:${random.uuid}
  client:
    service-url:
      defaultZone: ${EUREKA_URL}

